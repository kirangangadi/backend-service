# .github/workflows/deploy-service.yml
name: Test YQ Service

on:
  push:
  workflow_dispatch: 

jobs:
  yq_test:
    outputs: 
        json_single_line: ${{ steps.get-config.outputs.json_single_line }}
        json_single_line_manual: ${{ steps.get-config.outputs.json_single_line_manual }}
        dummy_json: ${{ steps.get-config.outputs.dummy_json }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check YQ
        id: get-config
        run: |
         
         json=$(yq -o=json '.batches | to_entries | map(.value | join(","))' .github/input.yaml)
         json_single_line=$(yq -o=json '.batches | to_entries | map(.value | join(","))' .github/input.yaml | jq -c)
         json_single_line_manual=$json_single_line
         dummy_json="{\"matrix\":[\"a\",\"b\",\"c\"]}"

         echo "json is $json"
         echo "json_single_line is $json_single_line"
         echo "json_single_line_manual $json_single_line_manual"
         echo "dummy_json $dummy_json"

         # set output

         echo "json_single_line=$json_single_line" >> $GITHUB_OUTPUT
         echo "json_single_line_manual=$json_single_line_manual" >> "$GITHUB_OUTPUT"
         echo "dummy_json=$dummy_json" >> "$GITHUB_OUTPUT"
         echo "output_${version}=${version}" >> "$GITHUB_OUTPUT"
         
         
         
         #JSON_OUTPUT=$(yq '.batches | to_entries | map([.value[]] | join(","))' .github/input.yaml)
         #JSON_OUTPUT1=$(yq '.batches | .[] | join(", ")' .github/input.yaml)
         #JSON_OUTPUT2=$(yq '.batches | to_entries | map("\"" + (.value | join(", ")) + "\"") | join(", ")' .github/input.yaml | paste -sd "," -)

         
         
         #JSON_OUTPUT3=$(yq -o=json '.batches | to_entries | map(.value | join(",")) | "[" + join(",") + "]"'  .github/input.yaml)
         manual_input="["service1,service2,service3","service4,service5,service6","service7,service8,service9"]"
         test_output="[service1,service2,service3,service4,service5,service6,service7,service8,service9]"

         #json_tostring=$(yq -o=json '.batches | to_entries | map(.value | join(","))' .github/input.yaml | jq -r 'tostring')
         
         

  use-output:
    needs: yq_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use JSON output
        run: |
            echo "JSON output: ${{ needs.yq_test.outputs.json_single_line }}"
            echo "JSON output: ${{ needs.yq_test.outputs.json_single_line_manual }}"
            echo "JSON output: ${{ needs.yq_test.outputs.dummy_json }}"

            echo "From JSON output: ${{ fromJson(needs.yq_test.outputs.json_single_line) }}"
            echo "From JSON output: ${{ fromJson(needs.yq_test.outputs.json_single_line_manual) }}"
            echo "From JSON output: ${{ fromJson(needs.yq_test.outputs.dummy_json) }}"


